// calculator using tkinter

import tkinter as tk
from tkinter import ttk

# Create the main window
root = tk.Tk()
root.title("Calculator")
root.geometry("400x580+100+200")
root.resizable(False, False)
root.configure(bg="#2e2e2e")

equation = ""

# Function to update the equation on the screen
def show(value):
    global equation
    equation += str(value)
    screen_label.config(text=equation)

# Function to clear the screen
def clear():
    global equation
    equation = ""
    screen_label.config(text=equation)

# Function to calculate the equation
def calculate():
    global equation
    try:
        result = str(eval(equation))
        screen_label.config(text=result)
        equation = result
    except:
        screen_label.config(text="Error")
        equation = ""

# Function to handle key presses
def on_key_press(event):
    key = event.char
    if key.isdigit() or key in '+-*/.':
        show(key)
    elif key == '\r':  # Enter key
        calculate()
    elif key == '\x08':  # Backspace key
        clear()

# Bind key events to the root window
root.bind('<Key>', on_key_press)

# Create the display screen
screen_label = tk.Label(root, text="", anchor=tk.E, bg="#ffffff", fg="#000000", font=("Arial", 20), padx=10)
screen_label.pack(expand=True, fill="both")

# Create the button frame
buttons_frame = tk.Frame(root, bg="#2e2e2e")
buttons_frame.pack(expand=True, fill="both")

# Style configuration
style = ttk.Style()
style.configure("TButton", font=("Arial", 18), padding=10)
style.map("TButton", background=[('active', '#4d4d4d')], relief=[('pressed', 'sunken'), ('!pressed', 'raised')])

# Button text and placement
buttons = [
    ('7', 1, 0), ('8', 1, 1), ('9', 1, 2), ('/', 1, 3),
    ('4', 2, 0), ('5', 2, 1), ('6', 2, 2), ('*', 2, 3),
    ('1', 3, 0), ('2', 3, 1), ('3', 3, 2), ('-', 3, 3),
    ('0', 4, 0), ('.', 4, 1), ('=', 4, 2), ('+', 4, 3),
    ('C', 5, 0, 1, 4)
]

# Create and place the buttons in the frame
for button in buttons:
    text = button[0]
    row = button[1]
    col = button[2]
    rowspan = button[3] if len(button) > 3 else 1
    colspan = button[4] if len(button) > 4 else 1
    btn = ttk.Button(buttons_frame, text=text, style="TButton",
                     command=lambda t=text: show(t) if t != '=' and t != 'C' else (calculate() if t == '=' else clear()))
    btn.grid(row=row, column=col, rowspan=rowspan, columnspan=colspan, sticky=tk.N+tk.S+tk.E+tk.W, padx=5, pady=5)

# Configure the grid layout
for i in range(6):  # Including row 5 for the 'C' button
    buttons_frame.rowconfigure(i, weight=1)
    buttons_frame.columnconfigure(i % 4, weight=1)

# Run the main loop
root.mainloop()
